if (self.CavalryLogger) { CavalryLogger.start_js(["nL+pO"]); }

__d('EmojiTextEditor.react',['DraftEditor.react','DraftModifier','EditorState','handleBeforeInputForEmoji','handlePastedTextForEmoji','React'],(function a(b,c,d,e,f,g){var h,i;if(c.__markCompiled)c.__markCompiled();h=babelHelpers.inherits(j,c('React').Component);i=h&&h.prototype;function j(){var k,l;'use strict';for(var m=arguments.length,n=Array(m),o=0;o<m;o++)n[o]=arguments[o];return l=(k=i.constructor).call.apply(k,[this].concat(n)),this.$EmojiTextEditor1=function(p){this.props.handleBeforeInput&&this.props.handleBeforeInput(p);var q=this.props.editorState,r=c('handleBeforeInputForEmoji')(q,p);if(r===q)return 'not-handled';this.props.onChange(r);return 'handled';}.bind(this),this.$EmojiTextEditor2=function(p,q){this.props.handlePastedText&&this.props.handlePastedText(p,q);var r=this.props.editorState,s=r.getCurrentInlineStyle(),t=[{text:p,inlineStyle:s}];t=c('handlePastedTextForEmoji')(t);var u=r;for(var v=0;v<t.length;v++){var w=t[v],x=w.text,y=w.inlineStyle,z=w.entityKey,aa=c('DraftModifier').replaceText(u.getCurrentContent(),u.getSelection(),x,y,z);u=c('EditorState').push(u,aa,'insert-characters');}if(u===r)return 'not-handled';this.props.onChange(u);return 'handled';}.bind(this),l;}j.prototype.shouldComponentUpdate=function(k){'use strict';return (this.props.editorState!==k.editorState||this.props.placeholder!==k.placeholder||this.props.ariaActiveDescendantID!==k.ariaActiveDescendantID||this.props.readOnly!==k.readOnly);};j.prototype.blur=function(){'use strict';this.refs.textEditor.blur();};j.prototype.focus=function(){'use strict';this.refs.textEditor.focus();};j.prototype.render=function(){'use strict';return (c('React').createElement('div',null,c('React').createElement(c('DraftEditor.react'),babelHelpers['extends']({},this.props,{ref:'textEditor',handleBeforeInput:this.$EmojiTextEditor1,handlePastedText:this.$EmojiTextEditor2}))));};f.exports=j;}),null);